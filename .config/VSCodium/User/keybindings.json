// Place your key bindings in this file to override the defaultsauto[]
[
    {
        "key": "tab",
        "command": "editor.toggleFold",
        "when": "editorTextFocus && foldingEnabled && neovim.mode != 'insert'"
    },
    {
        "key": "ctrl+k ctrl+l",
        "command": "-editor.toggleFold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+enter",
        "command": "editor.action.openLink",
        "when": "editorTextFocus && neovim.mode != 'insert'"
    },
    {
        "key": "shift+ctrl+e",
        "command": "actions.findWithSelection"
      },
      {
        "key": "ctrl+e",
        "command": "-actions.findWithSelection"
      },
      {
        "key": "ctrl+e",
        "command": "workbench.view.explorer"
      },
      {
        "key": "shift+ctrl+e",
        "command": "-workbench.view.explorer"
      },
      {
        "key": "r",
        "command": "renameFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
      },
      {
        "key": "enter",
        "command": "-renameFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
      },
      {
        "key": "j",
        "command": "list.focusDown",
        "when": "listFocus && explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
      },
      {
        "key": "k",
        "command": "list.focusUp",
        "when": "listFocus && explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
      },
      {
        "key": "ctrl+j",
        "command": "selectNextSuggestion",
        "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
      },
      {
        "key": "ctrl+k",
        "command": "selectPrevSuggestion",
        "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
      },
      {
        "key": "ctrl+j",
        "command": "workbench.action.quickOpenNavigateNext",
        "when": "inQuickOpen"
      },
      {
        "key": "tab",
        "command": "selectNextSuggestion",
        "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
      },
      {
        "key": "tab",
        "command": "workbench.action.quickOpenNavigateNext",
        "when": "inQuickOpen"
      },
      {
        "key": "shit+tab",
        "command": "selectPrevSuggestion",
        "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
      },
      {
        "key": "shift+tab",
        "command": "selectPrevSuggestion",
        "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
      },
      {
        "key": "shift+tab",
        "command": "workbench.action.quickOpenNavigatePrevious",
        "when": "inQuickOpen"
      },
      {
        "key": "ctrl+k",
        "command": "workbench.action.quickOpenNavigatePrevious",
        "when": "inQuickOpen"
      },
      {
        "key": "enter",
        "command": "list.select",
        "when": "explorerViewletVisible && filesExplorerFocus"
      },
      {
        "key": "l",
        "command": "list.select",
        "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
      },
      {
        "key": "o",
        "command": "list.toggleExpand",
        "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
      },
      {
        "key": "h",
        "command": "list.collapse",
        "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
      },
      {
        "key": "a",
        "command": "explorer.newFile",
        "when": "filesExplorerFocus && !inputFocus"
      },
      {
        "key": "shift+a",
        "command": "explorer.newFolder",
        "when": "filesExplorerFocus && !inputFocus"
      },
      {
        "key": "shift+;",
        "command": "insertPrevSuggestion",
        "when": "hasOtherSuggestions && textInputFocus && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
      },
      {
        "key": "ctrl+l",
        "when": "sideBarFocus",
        "command": "workbench.action.focusActiveEditorGroup"
      },
      {
        "key": "ctrl+k",
        "command": "workbench.action.focusActiveEditorGroup",
        // "when": "terminalFocus"
        "when": "panelFocus"
      },
      {
        "key": "ctrl+shift+t",
        "command": "workbench.action.terminal.focus",
        "when": "!terminalFocus"
      },
      {
        "key": "ctrl+j",
        "command": "-editor.action.insertLineAfter",
        "when": "editorTextFocus && neovim.ctrlKeysInsert && !neovim.recording && neovim.mode == 'insert'"
      },
      {
        "key": "alt+j",
        "command": "workbench.action.terminal.focus",
        "when": "!terminalFocus"
      },
      {
        "key": "ctrl+shift+t",
        "command": "workbench.action.togglePanel"
      },
      {
        "key": "ctrl+j",
        "command": "-workbench.action.togglePanel"
      },
      {
        "key": "ctrl+shift+k",
        "command": "editor.action.showHover",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+k ctrl+i",
        "command": "-editor.action.showHover",
        "when": "editorTextFocus"
      },
      {
        "key": "shift+tab",
        "command": "-acceptAlternativeSelectedSuggestion",
        "when": "suggestWidgetVisible && textInputFocus && textInputFocus"
      },
      {
        "key": "ctrl+f",
        "command": "-vscode-neovim.ctrl-f",
      },
      {
        "key": "alt+enter",
        "command": "markdown-checkbox.markCheckbox",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+shift+enter",
        "command": "-markdown-checkbox.markCheckbox",
        "when": "editorTextFocus"
      },
      {
        "key": "enter",
        "command": "-markdown.extension.onEnterKey",
        "when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId == 'markdown' && neovim.mode == 'insert'"
      },
      {
        "key": "ctrl+shift+enter",
        "command": "markdown.extension.onCtrlEnterKey",
        "when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId == 'markdown'"
      },
      {
        "key": "ctrl+enter",
        "command": "-markdown.extension.onCtrlEnterKey",
        "when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId == 'markdown'"
      },
      {
        "key": "ctrl+enter",
        "command": "editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
      },
      {
        "key": "alt+k",
        "command": "markdown.extension.onMoveLineUp",
        "when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId == 'markdown' && neovim.mode != 'insert'"
      },
      {
        "key": "alt+j",
        "command": "markdown.extension.onMoveLineDown",
        "when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId == 'markdown' && neovim.mode != 'insert'"
      },
]